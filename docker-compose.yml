services:
  web:
    container_name: vs_web
    build:
      context: ./web
    ports:
      - "8081:80"
    volumes:
      - ./web/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./web/index.html:/usr/share/nginx/html/index.html
      - ./web/scripts/matrix.js:/usr/share/nginx/html/scripts/matrix.js
      - ./web/css/styles.css:/usr/share/nginx/html/css/styles.css
    networks:
      - vs_network
    depends_on:
      - controller
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  controller:
    container_name: vs_controller
    build:
      context: .
      dockerfile: controller/Dockerfile
    networks:
      - vs_network
    ports:
      - "5001:5001/udp"
      - "5000:5000"
    volumes:
      - ./tests/:/app/tests/
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    networks:
      - vs_network
    depends_on:
      - controller
      - db_rest_service
    environment:
      - CONTROLLER_IP=controller
      - CONTROLLER_UDP_PORT=7000
      - DB_REST_SERVICE_IP=db_rest_service
      - DB_REST_SERVICE_PORT=80
    deploy:
      replicas: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./tests/:/app/tests/
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  mariadb:
    platform: linux/amd64
    image: mariadb:latest
    container_name: vs_mariadb
    volumes:
      - ./database/mariadb:/docker-entrypoint-initdb.d
    environment:
      MYSQL_INITDB_SKIP_TZINFO: 1
      TZ: "Europe/Berlin"
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_DATABASE: "vsdb"
      MYSQL_USER: "vs"
      MYSQL_PASSWORD: "vs"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - 3306:3306
    networks:
      - vs_network
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  phpadmin:
    platform: linux/amd64
    image: phpmyadmin/phpmyadmin
    container_name: vs_phpmyadmin
    ports:
      - 8080:80
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
    depends_on:
      - mariadb
    networks:
      - vs_network
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  loki:
    image: grafana/loki:latest
    container_name: vs_loki
    ports:
      - 3100:3100
    volumes:
      - ./loki/loki-config.yaml:/mnt/config/loki-config.yaml
    command: -config.file=/mnt/config/loki-config.yaml
    networks:
      - vs_network

  promtail:
    image: grafana/promtail:latest
    container_name: vs_promtail
    volumes:
      - ./promtail/promtail-config.yaml:/mnt/config/promtail-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/mnt/config/promtail-config.yaml
    depends_on:
      - loki
    networks:
      - vs_network

  grafana:
    image: grafana/grafana
    container_name: vs_grafana
    ports:
      - 3000:3000
    networks:
      - vs_network

  db_rest_service:
    build:
      context: .
      dockerfile: db_rest_service/Dockerfile
    container_name: vs_db_rest_service
    networks:
      - vs_network
    ports:
      - "80:80"
    depends_on:
      - mariadb
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  test_runner:
    build:
      context: .
      dockerfile: test_runner/Dockerfile
    container_name: vs_test_runner
    networks:
      - vs_network
    volumes:
      - ./tests/:/app/tests/
    depends_on:
      - controller
    ports:
      - "8100:8100"
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
  
  mosquitto:
    image: "eclipse-mosquitto:2.0.15"
    container_name: "vs_mosquitto"
    volumes:
      - ./mosquitto/mosquitto.conf:/mnt/config/mosquitto.conf
    command: mosquitto -c /mnt/config/mosquitto.conf
    networks:
      - vs_network
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
  
volumes:
  mariadb:

networks:
  vs_network:
    driver: bridge